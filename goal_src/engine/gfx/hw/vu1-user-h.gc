;;-*-Lisp-*-
(in-package goal)

;; name: vu1-user-h.gc
;; name in dgo: vu1-user-h
;; dgos: GAME, ENGINE

;; I _think_ this is a mask for which VU1 renderers to run.

;; ? maybe renderers which can be toggled in the menu:
(define *vu1-enable-user-menu*
    #x1FFFF8)

;; ? by default, all off.
(define *vu1-enable-user* 0)

;; Not sure what these "sinks" are.
;; possibly: somewhere the CPU side of the renderers can put data?
(deftype dma-foreground-sink (basic)
  ((bucket                   int32  :offset-assert 4)
   (foreground-texture-page  int8   :offset-assert 8)
   (foreground-texture-level int8   :offset-assert 9)
   (foreground-output-bucket int8   :offset-assert 10)
   )
  :method-count-assert 9
  :size-assert         #xb
  :flag-assert         #x90000000b
  )

;; additional info for the generic renderer
(deftype generic-bucket-state (structure)
  ((gifbuf-adr uint32  :offset-assert 0)
   (inbuf-adr  uint32  :offset-assert 4)
   )
  :pack-me
  :method-count-assert 9
  :size-assert         #x8
  :flag-assert         #x900000008
  )

;; sink for the generic renderer, a normal sink + extra data.
(deftype generic-dma-foreground-sink (dma-foreground-sink)
  ((state                    generic-bucket-state :inline :offset-assert 12)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )

;; group of sinks used for the foreground renderers.
(deftype dma-foreground-sink-group (basic)
  ((sink         dma-foreground-sink       3 :offset-assert 4)
   (merc-sink    dma-foreground-sink         :offset 4)
   (generic-sink generic-dma-foreground-sink :offset 8)
   (level        basic                       :offset-assert 16)
   )
  :method-count-assert 9
  :size-assert         #x14
  :flag-assert         #x900000014
  )
